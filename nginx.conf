user deploy;
worker_processes auto;
worker_rlimit_nofile 131070;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections  32768;
    multi_accept        on;
    use                 epoll;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ## Timeouts
    reset_timedout_connection on;   # Allow the server to close connections for non-responding clients
    client_header_timeout 30;       # How long do we wait to receive the HTTP header (inter packet timer) [default: 60s]
    client_body_timeout 30;         # How long do we wait to receive the HTTP body (inter packet timer) [default: 60s]
    send_timeout 20;                # How long do we wait to transmit a response to a client? (inter packet timer) [default: 60s]
    keepalive_timeout 75;           # How long to wait between keepalives before closing connection [default: 75s]
    keepalive_requests 100;         # Allow this many keepalive requests to be sent before closing connection [default: 100]
    lingering_close on;             # Wait for and process additional data from client, following heuristics which suggest this will happen
    lingering_time 30s;             # Maximum time to wait for more data, always close after this amount of time (even if there is more data) [default: 30s]
    lingering_timeout 5s;           # How long to wait for more data, close before lingering_time if nothing is receieved [default: 5s]
    resolver_timeout 10s;           # How long do we wait for DNS resolution?  [default: 10s]

    open_file_cache          max=20000 inactive=30s;
    open_file_cache_valid    60s;
    open_file_cache_min_uses 5;
    open_file_cache_errors   off;

    fastcgi_cache_lock on;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    fastcgi_cache_use_stale error timeout invalid_header updating http_500;
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

    client_max_body_size 16m;       # If you need bigger than 32MB then consider chunked uploads.

    gzip on;                        # Turn GZip compression on, always a good idea [default: off]
    gzip_disable "msie6";           # If someone is still using IE6 (?!), don't bother using GZip compression.
    gzip_vary on;                   # Insert "Vary: Accept-Encoding" HTTP header? [default: off]
    gzip_proxied any;               # Enable GZip compression for proxied requests? [default: off]
    gzip_comp_level 6;              # GZip compression level to use [default: 1]
    gzip_buffers 16 8k;
    gzip_http_version 1.1;          # Minimum HTTP version required to support GZip compression [default: 1.1]
    gzip_min_length 256;
    gzip_types
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/xhtml+xml
        application/xml
        application/xml+rss
        application/x-font-opentype
        application/x-font-truetype
        application/x-font-ttf
        application/x-javascript
        application/x-sqlite3
        font/eot
        font/opentype
        font/otf
        image/svg+xml
        image/vnd.microsoft.icon
        image/x-icon
        text/comma-separated-values
        text/css
        text/javascript
        text/plain
        text/xml;

    # Additional configuration not related to sites, though probably better to
    # keep all configuration in this file so it's easier to copy or use as
    # reference when setting up new servers.
    include /etc/nginx/conf.d/*.conf;
    # Load site-specific configuration.
    include /etc/nginx/sites-enabled/*.conf;
}
